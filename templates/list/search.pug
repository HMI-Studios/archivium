extends ../layout.pug
include ../mixins.pug

block breadcrumbs
  a.link.link-animated( href=`${ADDR_PREFIX}/` ) #{T('Home')}
  |  / 
  span #{T('Search')}

block content
  script
    include /static/scripts/cardUtils.js
    include /static/scripts/listUtils.js

  script.
  h1.center Search
  form.flex-row.gap-0
    input( id='search', name='search', value=search )
    button( type='submit' ) &#x1F50E;&#xFE0E;
  hr
  if search
    p
      i #{universes.length + items.length} result(s)
  .card-list
    each universe in universes
      .card.sheet.gap-4.align-start( data-goto=`${universeLink(universe.shortname)}/` )
        .d-flex.flex-col.grow-1
          h3.ma-0
            a.link.link-animated( href=`${universeLink(universe.shortname)}/` ) #{universe.title}
          .d-flex.gap-1

        .d-flex.flex-col.grow-3
            span 
              b #{T('Authors')}: 
              +authorList(universe.authors, universe.author_permissions)
            .d-flex.gap-2
              span
                b #{T('Created')}: 
                | #{formatDate(universe.created_at)}
              | — 
              span 
                b #{T('Updated')}: 
                | #{formatDate(universe.updated_at)}
              | —
              span #{universe.public ? 'Public' : 'Private'}
    each item in items
      .card.sheet.gap-4.align-start( data-goto=`${universeLink(item.universe_short)}/items/${item.shortname}` )
        .d-flex.flex-col.grow-1
          h3.ma-0
            a.link.link-animated( href=`${universeLink(item.universe_short)}/items/${item.shortname}` )
              +highlight(item.title, search, true)
          span #{capitalize(item.item_type)}
          div
            a.link.link-animated( href=`${universeLink(item.universe_short)}/` ) #{item.universe}

        .d-flex.flex-col.grow-3
            span 
              b #{T('Author')}: 
              a.link.link-animated( href=`${ADDR_PREFIX}/users/${item.author}` ) #{item.author}
            span 
              b #{T('Created')}: 
              | #{formatDate(item.created_at)}
            span 
              b #{T('Updated')}: 
              | #{formatDate(item.updated_at)}

        .d-flex.flex-wrap.gap-1.grow-4
          if item.tags
            each itemTag in item.tags
              if itemTag === search
                b ##{itemTag} 
              else
                span #
                  +highlight(itemTag, search)
        
        if item.snippet
          .row-2( style={ 'grid-column': '1 / 3' } )
            small
              i
                - const snippet = item.snippet
                +highlight(formatSnippet(snippet, item.match_pos >= 50, snippet.length === 100), search)
