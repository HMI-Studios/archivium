extends ../layout.pug

block breadcrumbs
  a.link.link-animated( href=`${ADDR_PREFIX}/` ) #{T('Home')}
  |  / 
  a.link.link-animated( href=`${ADDR_PREFIX}/universes` ) #{T('Universes')}
  |  / 
  a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}` ) #{universe.title}
  |  / 
  a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/items` ) #{T('Items')}
  |  / 
  span #{item.title}

block content
  script
    include /static/scripts/tabs.js

  h1.center #{item.title}
  p.center #{capitalize(item.item_type)} of 
    a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}` ) #{item.universe}
    if contextUser && (universe.author_permissions[contextUser.id] >= perms.WRITE/* || item.author === contextUser.username*/)
      |  - 
      a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/items/${item.shortname}/edit` ) Edit
  p.center
    small Created by 
      a.link.link-animated( href=`${ADDR_PREFIX}/users/${item.author}` ) #{item.author}
      |  #{formatDate(new Date(item.created_at))}
      |  - Last updated #{formatDate(new Date(item.updated_at))}
  p.center
    small
      if item.tags
        each tag in item.tags
          | ##{tag} 
  hr

  //- Tab buttons
  ul.navbarBtns#tabBtns.gap-1
    if parsedBody
      li.navbarBtn#bodyBtn( data-tab='body' )
        h3.navbarBtnLink.navbarText( onclick=`showTab('body')` ) Main Text
    if 'tabs' in item.obj_data
      each tab, name in item.obj_data.tabs
        li.navbarBtn( data-tab=name )
          h3.navbarBtnLink.navbarText( onclick=`showTab('${name}')` ) #{name}
    if 'gallery' in item.obj_data && 'title' in item.obj_data.gallery
      li.navbarBtn( data-tab='gallery' )
          h3.navbarBtnLink.navbarText( onclick=`showTab('gallery')` ) #{item.obj_data.gallery.title}
    if 'lineage' in item.obj_data && 'title' in item.obj_data.lineage
      li.navbarBtn( data-tab='lineage' )
          h3.navbarBtnLink.navbarText( onclick=`showTab('lineage')` ) #{item.obj_data.lineage.title}



  .tabs
    if 'tabs' in item.obj_data
      each tab, name in item.obj_data.tabs
        .itemTab.hidden( data-tab=name )
          each val, key in tab
            .itemKey
              span #{key}
              hr
              +mdText(val)

    if 'gallery' in item.obj_data && 'title' in item.obj_data.gallery
        .itemTab.hidden.gallery( data-tab='gallery' )
          each img in item.obj_data.gallery.imgs || []
            .itemKey
              img( src=img.url, alt=img.label )
              if img.mdLabel
                +mdText(img.mdLabel)

    if 'lineage' in item.obj_data && 'title' in item.obj_data.lineage
        .itemTab.hidden( data-tab='lineage' )
          each title, shortname in item.parents
            .itemKey
              span #{title[0] || T('Parent')}
              hr
              a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/items/${shortname}` )
                | #{item.parent_titles[shortname]}
          each title, shortname in item.children
            .itemKey
              span #{title[0] || T('Child')}
              hr
              a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/items/${shortname}` )
                | #{item.child_titles[shortname]}

    if parsedBody
      .sheet.hidden( data-tab='body' )
        +mdText(parsedBody)

  script.
    (function() {
      const galleryModalState = {}
      const galleryItems = document.querySelectorAll('.gallery .itemKey');
      galleryItems.forEach((itemKey, i) => {
        galleryModalState[i] = false;
        const img = itemKey.querySelector('img');

        img.onclick = (e) => {
          e.stopPropagation();
          if (!galleryModalState[i]) {
            itemKey.classList.add('modal');
            console.log(itemKey)
            galleryModalState[i] = true;
          }
        };

        itemKey.onclick = () => {
          if (galleryModalState[i]) {
            itemKey.classList.remove('modal');
            galleryModalState[i] = false;
          }
        };
      });
    })();
