extends ../layout.pug
include ../mixins.pug

mixin typeCard(shortname, category)
  .card.item-type
    a.cardLink.link( href=`${ADDR_PREFIX}/universes/${universe.shortname}/items?type=${shortname}` )
      div(style={ 'background-color': category[2] })
        h2(align='center')= capitalize(category[1])
    div
      if contextUser
        a.cardBtn.link( href=`${ADDR_PREFIX}/universes/${universe.shortname}/items/create?type=${shortname}` ) &#x2795; New
        a.cardBtn.link( href=`${ADDR_PREFIX}/users/${contextUser.username}/items?type=${shortname}` ) My #{category[1]}

block breadcrumbs
  a.link.link-animated( href=`${ADDR_PREFIX}/` ) #{T('Home')}
  |  / 
  a.link.link-animated( href=`${ADDR_PREFIX}/universes` ) #{T('Universes')}
  |  / 
  span #{universe.title}

block content
  script
    include /static/scripts/tabs.js
    include /static/scripts/cardUtils.js

  h1.center #{universe.title}
  p.center
    small Created by 
      a.link.link-animated( href=`${ADDR_PREFIX}/users/${universe.owner}` ) #{universe.owner}
      |  #{formatDate(new Date(universe.created_at))}
      |  - Last updated #{formatDate(new Date(universe.updated_at))}
      if contextUser && (universe.author_permissions[contextUser.id] >= perms.WRITE)
        |  - 
        a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/edit` ) Edit
      if contextUser && (universe.author_permissions[contextUser.id] >= perms.ADMIN)
        |  - 
        a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/permissions` ) Set Permissions
        |  - 
        a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/delete` ) Delete

  hr

  //- Tab buttons
  ul.navbarBtns#tabBtns.gap-1
    li.navbarBtn#bodyBtn( data-tab='items' )
      h3.navbarBtnLink.navbarText( onclick=`showTab('items')` ) Items
    li.navbarBtn#bodyBtn( data-tab='authors' )
      h3.navbarBtnLink.navbarText( onclick=`showTab('authors')` ) Authors
    if !universe.public
      li.navbarBtn#bodyBtn( data-tab='viewers' )
        h3.navbarBtnLink.navbarText( onclick=`showTab('viewers')` ) Viewers

  .tabs
    .container.hidden( data-tab='items' )
      if universe.obj_data.cats
        .type-card-container
          each category, shortname in universe.obj_data.cats
            +typeCard(shortname, category)
      else
        p No categories have been defined yet â€” go to the 
          a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}/edit` ) edit
          |  page to add some.
    
    .card-list.hidden( data-tab='authors' )
      each username, id in universe.authors
        if universe.author_permissions[id] > perms.READ
          .card.sheet.gap-4( onclick=`goTo('${ADDR_PREFIX}/users/${username}')` )
            img.userIcon( alt=username, src=authors[id].gravatarLink )
            .d-flex.flex-col.grow-1
              h2.ma-0
                a.link.link-animated( href=`${ADDR_PREFIX}/users/${username}` ) #{username}
              span
                b #{T('Joined')}: 
                | #{formatDate(authors[id].created_at)}
              span 
                b #{T('Last seen')}: 
                | #{formatDate(authors[id].updated_at)}
              span
                b #{T('Items Owned')}: 
                | #{authors[id].items_authored}
            .d-flex.flex-col.grow-1
              span.align-self-end.grow-1
                if universe.author_permissions[id] === perms.ADMIN
                  | Admin
    
    .card-list.hidden( data-tab='viewers' )
      each username, id in universe.authors
        if universe.author_permissions[id] === perms.READ
          .card.sheet.gap-4( onclick=`goTo('${ADDR_PREFIX}/users/${username}')` )
            img.userIcon( alt=username, src=authors[id].gravatarLink )
            .d-flex.flex-col.grow-1
              h2.ma-0
                a.link.link-animated( href=`${ADDR_PREFIX}/users/${username}` ) #{username}
              span
                b #{T('Joined')}: 
                | #{formatDate(authors[id].created_at)}
              span 
                b #{T('Last seen')}: 
                | #{formatDate(authors[id].updated_at)}
        