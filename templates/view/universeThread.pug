extends ../layout.pug

block breadcrumbs
  a.link.link-animated( href=`${ADDR_PREFIX}/` ) #{T('Home')}
  |  / 
  a.link.link-animated( href=`${ADDR_PREFIX}/universes` ) #{T('Universes')}
  |  / 
  a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}` ) #{universe.title}
  |  / 
  a.link.link-animated( href=`${ADDR_PREFIX}/universes/${universe.shortname}?tab=discuss` ) #{T('Discuss')}
  |  / 
  span #{T('New')}

block scripts
  script
    include /static/scripts/domUtils.js
    include /static/scripts/fetchUtils.js
    include /static/scripts/markdown/parse.js
    include /static/scripts/markdown/render.js

block content
  .d-flex.justify-between
    h2 #{thread.title}

    if contextUser
      a.link.d-flex.align-center
        span#notification-bell.material-symbols-outlined.mr-1(
          style={ 'font-size': 'xx-large' }
          title='Thread Notifications'
          class={ solid: thread.notifs_enabled }
        ) #{thread.notifs_enabled ? 'notifications_active' : 'notifications'}
      script.
        (() => {
          let isSubscribed = #{Boolean(thread.notifs_enabled)};
          const bell = document.getElementById('notification-bell');
          bell.addEventListener('click', async () => {
            isSubscribed = !isSubscribed;
            bell.classList.add('disabled');
            try {
              await putJSON(`/api/universes/#{universe.shortname}/discussion/#{thread.id}/subscribe`, { isSubscribed: isSubscribed });
            } catch (err) {
              console.error(err);
              isSubscribed = !isSubscribed;
            } finally {
              bell.textContent = isSubscribed ? 'notifications_active' : 'notifications';
              bell.classList.toggle('solid', isSubscribed);
              bell.classList.remove('disabled');
            }
          });
        })();

  include ../components/comments.pug
