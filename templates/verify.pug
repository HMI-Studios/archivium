extends layout.pug

block scripts
  script
    include /static/scripts/fetchUtils.js
    include /static/scripts/cardUtils.js
  script.
    let updateRetryAfterInterval;
    async function sendVerifyLink() {
      clearInterval(updateRetryAfterInterval);
      const [response, data] = await getJSON('#{ADDR_PREFIX}/api/users/#{user.username}/send-verify-link');
      const retryAfterText = document.querySelector('#retry-after');
      if (response.status === 429) {
        const retryAfter = new Date(data);
        const secondsLeft = Math.round((retryAfter - new Date()) / 1000);
        retryAfterText.textContent = T('Please wait %s seconds before trying again.', secondsLeft);
        updateRetryAfterInterval = setInterval(() => {
          const secondsLeft = Math.round((retryAfter - new Date()) / 1000);
          retryAfterText.textContent = T('Please wait %s seconds before trying again.', secondsLeft);
          if (secondsLeft < 1) {
            clearInterval(updateRetryAfterInterval);
            retryAfterText.classList.add('hidden');
          }
        }, 1000);
        retryAfterText.classList.remove('hidden');
      } else {
        retryAfterText.classList.add('hidden');
        if (data && data.alreadyVerified) {
          window.location.href = '#{ADDR_PREFIX}#{nextPage}';
        }
      }
    }

block content
  h1.center #{T('Access Denied')}
  .sheet
    if reason === 'bad_key'
      p #{T('Error: your verification link seems to be broken or have expired. A new one has been sent to your email (%s).', user.email)}
    else
      p #{T('Your account has not yet been verified. A verification link has been sent to your email (%s).', user.email)}
    p #{T('If you have not received this link, check your spam folder or request a new one below:')}
    .d-flex.align-baseline.gap-2
      button(onclick='sendVerifyLink()') #{T('Request a new verification link')}
      small.hidden.color-error#retry-after
    p #{T('Once you have verified your account you can ')}
      a.link.link-animated(href=`${ADDR_PREFIX}${nextPage}`) #{T('continue to Archivium')}
      | .
