extends ../layout.pug

block append save
  li#save-btn.navbarBtn
    script.
    a.navbarBtnLink.navbarText( onclick='document.forms.edit.submit()' ) Save &amp; Preview

block content
  script
    include /static/scripts/domUtils.js
    include /static/scripts/searchableSelect.js
    include /static/scripts/itemEditor.js

  h2 Edit #{item.title}
  form#edit( method='POST' )

    div.inputGroup
      label( for='title' ) Title: 
      input( id='title' type='text' name='title' value=item.title )

    div.inputGroup
      label( for='tags' ) Tags: 
      textarea( id='tags' name='tags' ) #{(item.tags || []).join(' ')}

    div#tabs
      div
        script.
          function handleTypeChange() {
            const type = getIdValue('new_tab_type');
            const input = document.getElementById('new_tab');
            if (type === 'custom') input.classList.remove('hidden');
            else input.classList.add('hidden');
          }
          function addTabByType() {
            const option = document.getElementById('new_tab_type').selectedOptions[0];
            const type = option.value;
            if (!type) return;
            const name = type === 'custom' ? getIdValue('new_tab') : option.innerText;
            addTab(type, name);
            handleTypeChange();
          }
        button( type='button' onclick=`addTabByType()` )= T('New Tab')
        select( id='new_tab_type' onchange='handleTypeChange()' )
          option( hidden disabled selected value ) #{T('Tab Type')}...
          each type in ['lineage', 'location', 'chronology', 'gallery']
            option( value=type )= capitalize(T(type))
          option( value='custom' )= T('Custom Data')
        input( id='new_tab' type='text' placeholder='Tab Name' ).hidden
      div.tabs-buttons
      div.tabs-content

    div#body.editor( data-replicated-value=item.obj_data.body || '' )
      if 'body' in item.obj_data
        textarea( oninput="this.parentNode.dataset.replicatedValue = this.value" )
          | #{item.obj_data.body || ''}
        script.
          window.onload = () => {
            bindDataValue('#body textarea', (body) => updateObjData({ body }));
          };
      else
        button( type='button' onclick='createBody()' ) Add Body Text
      
    div
      input( id='obj_data' type='hidden' name='obj_data' value='{}' )

    if error
      div
        span( style={color: 'red', 'font-size': 'small'} )= error 

  script!= `updateObjData(${JSON.stringify(item.obj_data)}); itemMap = ${JSON.stringify(itemMap)};`
  script.
    resetTabs();
