-
  const capitalize = (str) => str[0].toUpperCase() + str.substr(1,str.length-1);
  const prefixItems = (prefix, items) => {
    const prefixedItems = [];
    for (const item of items) {
      prefixedItems.push(prefix + item);
    }
    return prefixedItems;
  };
  const formatDate = (date, intervalOnly=false, short=false) => {
    if (!date) return;
    const now = new Date();
    const secondsAgo = (now - date) / 1000;
    if (secondsAgo < 60) return `${Math.round(secondsAgo)} second${Math.round(secondsAgo) === 1 ? '' : 's'} ago`;
    const minutesAgo = secondsAgo / 60;
    if (minutesAgo < 60) return `${Math.round(minutesAgo)} minute${Math.round(minutesAgo) === 1 ? '' : 's'} ago`;
    const hoursAgo = minutesAgo / 60;
    if (hoursAgo < 24) return `${Math.round(hoursAgo)} hour${Math.round(hoursAgo) === 1 ? '' : 's'} ago`;
    const daysAgo = hoursAgo / 24;
    if (daysAgo < 30) return `${Math.round(daysAgo)} day${Math.round(daysAgo) === 1 ? '' : 's'} ago`;
    if (intervalOnly) {
      const weeksAgo = daysAgo / 7;
      if (Math.round(weeksAgo) < 8) return `${Math.round(weeksAgo)} week${Math.round(weeksAgo) === 1 ? '' : 's'} ago`;
      const monthDiff = now.getMonth() - date.getMonth();
      const yearDiff = now.getFullYear() - date.getFullYear();
      if (yearDiff === 0) {
        return `${monthDiff} months ago`;
      } else if (yearDiff === 1) {
        if (monthDiff < 0) return `${monthDiff + 12} months ago`;
        else return 'last year';
      } else {
        const yearsAgo = yearDiff - (monthDiff < 0 ? 1 : 0);
        if (yearDiff === 1) return 'last year';
        else return `${yearDiff} years ago`;
      }
    }

    if (short) return `${date.toDateString()} ${date.toLocaleTimeString()}`;
    else return `on ${date.toDateString()} at ${date.toLocaleTimeString()}`;
  };
