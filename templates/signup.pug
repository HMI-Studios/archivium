extends layout.pug

block title
  title #{T('Create Account')} â€” #{T('Archivium')}

block scripts
  script( src='https://www.google.com/recaptcha/api.js' )
  script.
    const validateUsername = !{validateUsername};
  script.
    function onSubmit(token) {
      document.querySelector('#signup').submit();
    }

block content
  h2 #{T('Create Account')}
  form#signup(method='POST')
    div.inputGroup
      label(for='username') #{T('Username')}: 
      input(id='username' type='text' name='username' value=username)
    div.inputGroup
      label(for='email') #{T('Email')}: 
      input(id='email' type='email' name='email' value=email)
    div.inputGroup
      label(for='password') #{T('Password')}: 
      input(id='password' type='password' name='password')
    div.inputGroup.hidden
      label(for='hp') #{T('HP')}: 
      input(id='hp' type='text' name='hp')
    br
    .d-flex.gap-4
      input(id='tos' type='checkbox' required)
      small #{T('Yes, I agree to the ')}
        a.link.link-animated(href='/privacy-policy') #{T('privacy policy')}
        |  #{T('and')} 
        a.link.link-animated(href='/terms-of-service') #{T('terms of service')}
        | .
    .d-flex.gap-4
      input(id='newsletter' type='checkbox' name='newsletter')
      small #{T('Yes, I want to receive email updates about Archivium (optional).')}
    br
    div
      button(class='g-recaptcha' data-sitekey='6Lf35qkqAAAAAMnKLqoBJ9wIX30sodE4lWQS6Y3A' data-callback='onSubmit' data-action='submit') #{T('Create Account')}
    div
      small.color-error#error(class=(error ? '' : 'hidden')) #{T(error)}

    script.
      (() => {
        const form = document.forms.signup;
        const formError = document.querySelector('#error');
        form.username.addEventListener('input', () => {
          form.username.value = form.username.value.trim();
          formError.classList.add('hidden');
          const value = form.username.value;
          const error = validateUsername(value);
          if (error) {
            formError.innerText = error;
            formError.classList.remove('hidden');
          }
        });
        form.addEventListener('submit', async (e) => {
          formError.classList.add('hidden');
          const value = form.username.value;

          const error = validateUsername(value);
          if (error) {
            formError.innerText = error;
            formError.classList.remove('hidden');
            return e.preventDefault();
          }
        });
      })();

  p
    a.link.link-animated(href=`${ADDR_PREFIX}/login${searchQueries ? `?${searchQueries}`: ''}`) #{T('Login to your account')}
